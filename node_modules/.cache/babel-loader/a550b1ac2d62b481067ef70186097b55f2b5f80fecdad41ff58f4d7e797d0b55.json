{"ast":null,"code":"import { genStyleHooks, mergeToken } from '../../theme/internal';\nimport { initComponentToken, initInputToken } from './token';\n// =============================== OTP ================================\nconst genOTPStyle = token => {\n  const {\n    componentCls,\n    paddingXS\n  } = token;\n  return {\n    [\"\".concat(componentCls)]: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      flexWrap: 'nowrap',\n      columnGap: paddingXS,\n      '&-rtl': {\n        direction: 'rtl'\n      },\n      [\"\".concat(componentCls, \"-input\")]: {\n        textAlign: 'center',\n        paddingInline: token.paddingXXS\n      },\n      // ================= Size =================\n      [\"&\".concat(componentCls, \"-sm \").concat(componentCls, \"-input\")]: {\n        paddingInline: token.calc(token.paddingXXS).div(2).equal()\n      },\n      [\"&\".concat(componentCls, \"-lg \").concat(componentCls, \"-input\")]: {\n        paddingInline: token.paddingXS\n      }\n    }\n  };\n};\n// ============================== Export ==============================\nexport default genStyleHooks(['Input', 'OTP'], token => {\n  const inputToken = mergeToken(token, initInputToken(token));\n  return [genOTPStyle(inputToken)];\n}, initComponentToken);","map":{"version":3,"names":["genStyleHooks","mergeToken","initComponentToken","initInputToken","genOTPStyle","token","componentCls","paddingXS","concat","display","alignItems","flexWrap","columnGap","direction","textAlign","paddingInline","paddingXXS","calc","div","equal","inputToken"],"sources":["/Users/saravanan/node_modules/antd/es/input/style/otp.js"],"sourcesContent":["import { genStyleHooks, mergeToken } from '../../theme/internal';\nimport { initComponentToken, initInputToken } from './token';\n// =============================== OTP ================================\nconst genOTPStyle = token => {\n  const {\n    componentCls,\n    paddingXS\n  } = token;\n  return {\n    [`${componentCls}`]: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      flexWrap: 'nowrap',\n      columnGap: paddingXS,\n      '&-rtl': {\n        direction: 'rtl'\n      },\n      [`${componentCls}-input`]: {\n        textAlign: 'center',\n        paddingInline: token.paddingXXS\n      },\n      // ================= Size =================\n      [`&${componentCls}-sm ${componentCls}-input`]: {\n        paddingInline: token.calc(token.paddingXXS).div(2).equal()\n      },\n      [`&${componentCls}-lg ${componentCls}-input`]: {\n        paddingInline: token.paddingXS\n      }\n    }\n  };\n};\n// ============================== Export ==============================\nexport default genStyleHooks(['Input', 'OTP'], token => {\n  const inputToken = mergeToken(token, initInputToken(token));\n  return [genOTPStyle(inputToken)];\n}, initComponentToken);"],"mappings":"AAAA,SAASA,aAAa,EAAEC,UAAU,QAAQ,sBAAsB;AAChE,SAASC,kBAAkB,EAAEC,cAAc,QAAQ,SAAS;AAC5D;AACA,MAAMC,WAAW,GAAGC,KAAK,IAAI;EAC3B,MAAM;IACJC,YAAY;IACZC;EACF,CAAC,GAAGF,KAAK;EACT,OAAO;IACL,IAAAG,MAAA,CAAIF,YAAY,IAAK;MACnBG,OAAO,EAAE,aAAa;MACtBC,UAAU,EAAE,QAAQ;MACpBC,QAAQ,EAAE,QAAQ;MAClBC,SAAS,EAAEL,SAAS;MACpB,OAAO,EAAE;QACPM,SAAS,EAAE;MACb,CAAC;MACD,IAAAL,MAAA,CAAIF,YAAY,cAAW;QACzBQ,SAAS,EAAE,QAAQ;QACnBC,aAAa,EAAEV,KAAK,CAACW;MACvB,CAAC;MACD;MACA,KAAAR,MAAA,CAAKF,YAAY,UAAAE,MAAA,CAAOF,YAAY,cAAW;QAC7CS,aAAa,EAAEV,KAAK,CAACY,IAAI,CAACZ,KAAK,CAACW,UAAU,CAAC,CAACE,GAAG,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC;MAC3D,CAAC;MACD,KAAAX,MAAA,CAAKF,YAAY,UAAAE,MAAA,CAAOF,YAAY,cAAW;QAC7CS,aAAa,EAAEV,KAAK,CAACE;MACvB;IACF;EACF,CAAC;AACH,CAAC;AACD;AACA,eAAeP,aAAa,CAAC,CAAC,OAAO,EAAE,KAAK,CAAC,EAAEK,KAAK,IAAI;EACtD,MAAMe,UAAU,GAAGnB,UAAU,CAACI,KAAK,EAAEF,cAAc,CAACE,KAAK,CAAC,CAAC;EAC3D,OAAO,CAACD,WAAW,CAACgB,UAAU,CAAC,CAAC;AAClC,CAAC,EAAElB,kBAAkB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}